

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue May 19 16:56:09 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  007C81                     __pidataCOMRAM:
    55                           	opt callstack 0
    56                           
    57                           ;initializer for _numero
    58  007C81  0062               	dw	98
    59                           
    60                           ;initializer for _tiempo_m
    61  007C83  0E                 	db	14
    62  0000                     _PORTAbits	set	3968
    63  0000                     _TRISEbits	set	3990
    64  0000                     _TRISD	set	3989
    65  0000                     _ADCON1	set	4033
    66  0000                     _PORTD	set	3971
    67  0000                     _PORTEbits	set	3972
    68                           
    69                           ; #config settings
    70  0000                     
    71                           	psect	cinit
    72  007C84                     __pcinit:
    73                           	opt callstack 0
    74  007C84                     start_initialization:
    75                           	opt callstack 0
    76  007C84                     __initialization:
    77                           	opt callstack 0
    78                           
    79                           ; Initialize objects allocated to COMRAM (3 bytes)
    80                           ; load TBLPTR registers with __pidataCOMRAM
    81  007C84  0E81               	movlw	low __pidataCOMRAM
    82  007C86  6EF6               	movwf	tblptrl,c
    83  007C88  0E7C               	movlw	high __pidataCOMRAM
    84  007C8A  6EF7               	movwf	tblptrh,c
    85  007C8C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    86  007C8E  6EF8               	movwf	tblptru,c
    87  007C90  0009               	tblrd		*+	;fetch initializer
    88  007C92  CFF5 F00A          	movff	tablat,__pdataCOMRAM
    89  007C96  0009               	tblrd		*+	;fetch initializer
    90  007C98  CFF5 F00B          	movff	tablat,__pdataCOMRAM+1
    91  007C9C  0009               	tblrd		*+	;fetch initializer
    92  007C9E  CFF5 F00C          	movff	tablat,__pdataCOMRAM+2
    93                           
    94                           ; Clear objects allocated to COMRAM (2 bytes)
    95  007CA2  6A0E               	clrf	(__pbssCOMRAM+1)& (0+255),c
    96  007CA4  6A0D               	clrf	__pbssCOMRAM& (0+255),c
    97  007CA6                     end_of_initialization:
    98                           	opt callstack 0
    99  007CA6                     __end_of__initialization:
   100                           	opt callstack 0
   101  007CA6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   102  007CA8  6EF8               	movwf	tblptru,c
   103  007CAA  0100               	movlb	0
   104  007CAC  EF8D  F03E         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	bssCOMRAM
   107  00000D                     __pbssCOMRAM:
   108                           	opt callstack 0
   109  00000D                     _decena:
   110                           	opt callstack 0
   111  00000D                     	ds	1
   112  00000E                     _unidad:
   113                           	opt callstack 0
   114  00000E                     	ds	1
   115                           
   116                           	psect	dataCOMRAM
   117  00000A                     __pdataCOMRAM:
   118                           	opt callstack 0
   119  00000A                     _numero:
   120                           	opt callstack 0
   121  00000A                     	ds	2
   122  00000C                     _tiempo_m:
   123                           	opt callstack 0
   124  00000C                     	ds	1
   125                           
   126                           	psect	cstackCOMRAM
   127  000001                     __pcstackCOMRAM:
   128                           	opt callstack 0
   129  000001                     ??_deco_cc:
   130  000001                     ?___awdiv:
   131                           	opt callstack 0
   132  000001                     ?___awmod:
   133                           	opt callstack 0
   134  000001                     ___awdiv@dividend:
   135                           	opt callstack 0
   136  000001                     ___awmod@dividend:
   137                           	opt callstack 0
   138                           
   139                           ; 2 bytes @ 0x0
   140  000001                     	ds	2
   141  000003                     deco_cc@numero:
   142                           	opt callstack 0
   143  000003                     ___awdiv@divisor:
   144                           	opt callstack 0
   145  000003                     ___awmod@divisor:
   146                           	opt callstack 0
   147                           
   148                           ; 2 bytes @ 0x2
   149  000003                     	ds	1
   150  000004                     deco_cc@myDeco:
   151                           	opt callstack 0
   152                           
   153                           ; 1 bytes @ 0x3
   154  000004                     	ds	1
   155  000005                     ___awdiv@counter:
   156                           	opt callstack 0
   157  000005                     ___awmod@counter:
   158                           	opt callstack 0
   159                           
   160                           ; 1 bytes @ 0x4
   161  000005                     	ds	1
   162  000006                     ___awdiv@sign:
   163                           	opt callstack 0
   164  000006                     ___awmod@sign:
   165                           	opt callstack 0
   166                           
   167                           ; 1 bytes @ 0x5
   168  000006                     	ds	1
   169  000007                     ___awdiv@quotient:
   170                           	opt callstack 0
   171                           
   172                           ; 2 bytes @ 0x6
   173  000007                     	ds	2
   174  000009                     ??_v_display:
   175                           
   176                           ; 1 bytes @ 0x8
   177  000009                     	ds	1
   178  00000A                     
   179                           ; 1 bytes @ 0x9
   180 ;;
   181 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   182 ;;
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 29 in file "main.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, status,2, status,0, cstack
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   199 ;;      Params:         0       0       0       0       0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0       0       0
   202 ;;      Totals:         0       0       0       0       0       0       0       0       0
   203 ;;Total ram usage:        0 bytes
   204 ;; Hardware stack levels required when called:    2
   205 ;; This function calls:
   206 ;;		_v_display
   207 ;; This function is called by:
   208 ;;		Startup code after reset
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           	psect	text0
   213  007D1A                     __ptext0:
   214                           	opt callstack 0
   215  007D1A                     _main:
   216                           	opt callstack 29
   217  007D1A                     
   218                           ;main.c: 31:     ADCON1 = 0x0F;
   219  007D1A  0E0F               	movlw	15
   220  007D1C  6EC1               	movwf	193,c	;volatile
   221                           
   222                           ;main.c: 32:     TRISD = 0x00;
   223  007D1E  0E00               	movlw	0
   224  007D20  6E95               	movwf	149,c	;volatile
   225  007D22                     
   226                           ;main.c: 33:     TRISEbits.RE0 = 0;
   227  007D22  9096               	bcf	150,0,c	;volatile
   228  007D24                     
   229                           ;main.c: 34:     TRISEbits.RE1 = 0;
   230  007D24  9296               	bcf	150,1,c	;volatile
   231  007D26                     
   232                           ;main.c: 35:     PORTEbits.RE0=1;
   233  007D26  8084               	bsf	132,0,c	;volatile
   234  007D28                     
   235                           ;main.c: 36:     PORTEbits.RE1=0;
   236  007D28  9284               	bcf	132,1,c	;volatile
   237  007D2A                     l1230:
   238                           
   239                           ;main.c: 42:         if(PORTAbits.RA0 == 1){
   240  007D2A  A080               	btfss	128,0,c	;volatile
   241  007D2C  EF9A  F03E         	goto	u671
   242  007D30  EF9C  F03E         	goto	u670
   243  007D34                     u671:
   244  007D34  EFBB  F03E         	goto	l1244
   245  007D38                     u670:
   246  007D38  EFA0  F03E         	goto	l1236
   247  007D3C                     l1234:
   248                           
   249                           ;main.c: 44:                 v_display();
   250  007D3C  EC58  F03E         	call	_v_display	;wreg free
   251  007D40                     l1236:
   252                           
   253                           ;main.c: 43:             while(PORTAbits.RA0 == 1){
   254  007D40  B080               	btfsc	128,0,c	;volatile
   255  007D42  EFA5  F03E         	goto	u681
   256  007D46  EFA7  F03E         	goto	u680
   257  007D4A                     u681:
   258  007D4A  EF9E  F03E         	goto	l1234
   259  007D4E                     u680:
   260  007D4E                     
   261                           ;main.c: 46:             numero++;
   262  007D4E  4A0A               	infsnz	_numero^0,f,c
   263  007D50  2A0B               	incf	(_numero+1)^0,f,c
   264  007D52                     
   265                           ;main.c: 47:             if(numero>99)
   266  007D52  BE0B               	btfsc	(_numero+1)^0,7,c
   267  007D54  EFB5  F03E         	goto	u691
   268  007D58  500B               	movf	(_numero+1)^0,w,c
   269  007D5A  E109               	bnz	u690
   270  007D5C  0E64               	movlw	100
   271  007D5E  5C0A               	subwf	_numero^0,w,c
   272  007D60  A0D8               	btfss	status,0,c
   273  007D62  EFB5  F03E         	goto	u691
   274  007D66  EFB7  F03E         	goto	u690
   275  007D6A                     u691:
   276  007D6A  EFBB  F03E         	goto	l1244
   277  007D6E                     u690:
   278  007D6E                     
   279                           ;main.c: 48:                 numero=0;
   280  007D6E  0E00               	movlw	0
   281  007D70  6E0B               	movwf	(_numero+1)^0,c
   282  007D72  0E00               	movlw	0
   283  007D74  6E0A               	movwf	_numero^0,c
   284  007D76                     l1244:
   285                           
   286                           ;main.c: 50:         if(PORTAbits.RA1 == 1){
   287  007D76  A280               	btfss	128,1,c	;volatile
   288  007D78  EFC0  F03E         	goto	u701
   289  007D7C  EFC2  F03E         	goto	u700
   290  007D80                     u701:
   291  007D80  EFDB  F03E         	goto	l1258
   292  007D84                     u700:
   293  007D84  EFC6  F03E         	goto	l1250
   294  007D88                     l1248:
   295                           
   296                           ;main.c: 52:                 v_display();
   297  007D88  EC58  F03E         	call	_v_display	;wreg free
   298  007D8C                     l1250:
   299                           
   300                           ;main.c: 51:             while(PORTAbits.RA1 == 1){
   301  007D8C  B280               	btfsc	128,1,c	;volatile
   302  007D8E  EFCB  F03E         	goto	u711
   303  007D92  EFCD  F03E         	goto	u710
   304  007D96                     u711:
   305  007D96  EFC4  F03E         	goto	l1248
   306  007D9A                     u710:
   307  007D9A                     
   308                           ;main.c: 54:             numero--;
   309  007D9A  060A               	decf	_numero^0,f,c
   310  007D9C  A0D8               	btfss	status,0,c
   311  007D9E  060B               	decf	(_numero+1)^0,f,c
   312  007DA0                     
   313                           ;main.c: 55:             if(numero<0)
   314  007DA0  BE0B               	btfsc	(_numero+1)^0,7,c
   315  007DA2  EFD7  F03E         	goto	u720
   316  007DA6  EFD5  F03E         	goto	u721
   317  007DAA                     u721:
   318  007DAA  EFDB  F03E         	goto	l1258
   319  007DAE                     u720:
   320  007DAE                     
   321                           ;main.c: 56:                 numero=99;
   322  007DAE  0E00               	movlw	0
   323  007DB0  6E0B               	movwf	(_numero+1)^0,c
   324  007DB2  0E63               	movlw	99
   325  007DB4  6E0A               	movwf	_numero^0,c
   326  007DB6                     l1258:
   327                           
   328                           ;main.c: 59:         v_display();
   329  007DB6  EC58  F03E         	call	_v_display	;wreg free
   330  007DBA  EF95  F03E         	goto	l1230
   331  007DBE  EF00  F000         	goto	start
   332  007DC2                     __end_of_main:
   333                           	opt callstack 0
   334                           
   335 ;; *************** function _v_display *****************
   336 ;; Defined at:
   337 ;;		line 16 in file "main.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		wreg, status,2, status,0, cstack
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   351 ;;      Params:         0       0       0       0       0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0       0       0       0       0
   353 ;;      Temps:          1       0       0       0       0       0       0       0       0
   354 ;;      Totals:         1       0       0       0       0       0       0       0       0
   355 ;;Total ram usage:        1 bytes
   356 ;; Hardware stack levels used:    1
   357 ;; Hardware stack levels required when called:    1
   358 ;; This function calls:
   359 ;;		___awdiv
   360 ;;		___awmod
   361 ;;		_deco_cc
   362 ;; This function is called by:
   363 ;;		_main
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367                           	psect	text1
   368  007CB0                     __ptext1:
   369                           	opt callstack 0
   370  007CB0                     _v_display:
   371                           	opt callstack 29
   372  007CB0                     
   373                           ;main.c: 17:         unidad=numero%10;
   374  007CB0  C00A  F001         	movff	_numero,___awmod@dividend
   375  007CB4  C00B  F002         	movff	_numero+1,___awmod@dividend+1
   376  007CB8  0E00               	movlw	0
   377  007CBA  6E04               	movwf	(___awmod@divisor+1)^0,c
   378  007CBC  0E0A               	movlw	10
   379  007CBE  6E03               	movwf	___awmod@divisor^0,c
   380  007CC0  ECE1  F03E         	call	___awmod	;wreg free
   381  007CC4  5001               	movf	?___awmod^0,w,c
   382  007CC6  6E0E               	movwf	_unidad^0,c
   383                           
   384                           ;main.c: 18:         decena=numero/10;
   385  007CC8  C00A  F001         	movff	_numero,___awdiv@dividend
   386  007CCC  C00B  F002         	movff	_numero+1,___awdiv@dividend+1
   387  007CD0  0E00               	movlw	0
   388  007CD2  6E04               	movwf	(___awdiv@divisor+1)^0,c
   389  007CD4  0E0A               	movlw	10
   390  007CD6  6E03               	movwf	___awdiv@divisor^0,c
   391  007CD8  EC39  F03F         	call	___awdiv	;wreg free
   392  007CDC  5001               	movf	?___awdiv^0,w,c
   393  007CDE  6E0D               	movwf	_decena^0,c
   394  007CE0                     
   395                           ;main.c: 19:         PORTEbits.RE0=0;
   396  007CE0  9084               	bcf	132,0,c	;volatile
   397  007CE2                     
   398                           ;main.c: 20:         PORTEbits.RE1=1;
   399  007CE2  8284               	bsf	132,1,c	;volatile
   400                           
   401                           ;main.c: 21:         PORTD = deco_cc(decena);
   402  007CE4  500D               	movf	_decena^0,w,c
   403  007CE6  EC9B  F03F         	call	_deco_cc
   404  007CEA  6E83               	movwf	131,c	;volatile
   405  007CEC                     
   406                           ;main.c: 22:         _delay((unsigned long)((tiempo_m)*(4000000L/4000.0)));
   407  007CEC  0E13               	movlw	19
   408  007CEE  6E09               	movwf	??_v_display^0,c
   409  007CF0  0E2D               	movlw	45
   410  007CF2                     u737:
   411  007CF2  2EE8               	decfsz	wreg,f,c
   412  007CF4  D7FE               	bra	u737
   413  007CF6  2E09               	decfsz	??_v_display^0,f,c
   414  007CF8  D7FC               	bra	u737
   415  007CFA  F000               	nop	
   416  007CFC                     
   417                           ;main.c: 23:         PORTEbits.RE0=1;
   418  007CFC  8084               	bsf	132,0,c	;volatile
   419  007CFE                     
   420                           ;main.c: 24:         PORTEbits.RE1=0;
   421  007CFE  9284               	bcf	132,1,c	;volatile
   422  007D00                     
   423                           ;main.c: 25:         PORTD = deco_cc(unidad);
   424  007D00  500E               	movf	_unidad^0,w,c
   425  007D02  EC9B  F03F         	call	_deco_cc
   426  007D06  6E83               	movwf	131,c	;volatile
   427                           
   428                           ;main.c: 26:          _delay((unsigned long)((tiempo_m)*(4000000L/4000.0)));
   429  007D08  0E13               	movlw	19
   430  007D0A  6E09               	movwf	??_v_display^0,c
   431  007D0C  0E2D               	movlw	45
   432  007D0E                     u747:
   433  007D0E  2EE8               	decfsz	wreg,f,c
   434  007D10  D7FE               	bra	u747
   435  007D12  2E09               	decfsz	??_v_display^0,f,c
   436  007D14  D7FC               	bra	u747
   437  007D16  F000               	nop	
   438  007D18  0012               	return		;funcret
   439  007D1A                     __end_of_v_display:
   440                           	opt callstack 0
   441                           
   442 ;; *************** function _deco_cc *****************
   443 ;; Defined at:
   444 ;;		line 8 in file "./deco_catodo.h"
   445 ;; Parameters:    Size  Location     Type
   446 ;;  numero          1    wreg     unsigned char 
   447 ;; Auto vars:     Size  Location     Type
   448 ;;  numero          1    2[COMRAM] unsigned char 
   449 ;;  myDeco          1    3[COMRAM] unsigned char 
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      unsigned char 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   459 ;;      Params:         0       0       0       0       0       0       0       0       0
   460 ;;      Locals:         2       0       0       0       0       0       0       0       0
   461 ;;      Temps:          2       0       0       0       0       0       0       0       0
   462 ;;      Totals:         4       0       0       0       0       0       0       0       0
   463 ;;Total ram usage:        4 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; This function calls:
   466 ;;		Nothing
   467 ;; This function is called by:
   468 ;;		_v_display
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text2
   473  007F36                     __ptext2:
   474                           	opt callstack 0
   475  007F36                     _deco_cc:
   476                           	opt callstack 29
   477                           
   478                           ;incstack = 0
   479                           ;deco_cc@numero stored from wreg
   480  007F36  6E03               	movwf	deco_cc@numero^0,c
   481  007F38                     
   482                           ;./deco_catodo.h: 9:     char myDeco=0;
   483  007F38  0E00               	movlw	0
   484  007F3A  6E04               	movwf	deco_cc@myDeco^0,c
   485                           
   486                           ;./deco_catodo.h: 11:     switch(numero){
   487  007F3C  EFC8  F03F         	goto	l758
   488  007F40                     l736:
   489  007F40  0E40               	movlw	64
   490  007F42  6E04               	movwf	deco_cc@myDeco^0,c
   491  007F44  EFFD  F03F         	goto	l760
   492  007F48                     l738:
   493  007F48  0E79               	movlw	121
   494  007F4A  6E04               	movwf	deco_cc@myDeco^0,c
   495  007F4C  EFFD  F03F         	goto	l760
   496  007F50                     l740:
   497  007F50  0E24               	movlw	36
   498  007F52  6E04               	movwf	deco_cc@myDeco^0,c
   499  007F54  EFFD  F03F         	goto	l760
   500  007F58                     l742:
   501  007F58  0E30               	movlw	48
   502  007F5A  6E04               	movwf	deco_cc@myDeco^0,c
   503  007F5C  EFFD  F03F         	goto	l760
   504  007F60                     l744:
   505  007F60  0E19               	movlw	25
   506  007F62  6E04               	movwf	deco_cc@myDeco^0,c
   507  007F64  EFFD  F03F         	goto	l760
   508  007F68                     l746:
   509  007F68  0E12               	movlw	18
   510  007F6A  6E04               	movwf	deco_cc@myDeco^0,c
   511  007F6C  EFFD  F03F         	goto	l760
   512  007F70                     l748:
   513  007F70  0E02               	movlw	2
   514  007F72  6E04               	movwf	deco_cc@myDeco^0,c
   515  007F74  EFFD  F03F         	goto	l760
   516  007F78                     l750:
   517  007F78  0E78               	movlw	120
   518  007F7A  6E04               	movwf	deco_cc@myDeco^0,c
   519  007F7C  EFFD  F03F         	goto	l760
   520  007F80                     l752:
   521  007F80  0E00               	movlw	0
   522  007F82  6E04               	movwf	deco_cc@myDeco^0,c
   523  007F84  EFFD  F03F         	goto	l760
   524  007F88                     l754:
   525  007F88  0E10               	movlw	16
   526  007F8A  6E04               	movwf	deco_cc@myDeco^0,c
   527  007F8C  EFFD  F03F         	goto	l760
   528  007F90                     l758:
   529  007F90  5003               	movf	deco_cc@numero^0,w,c
   530  007F92  6E01               	movwf	??_deco_cc^0,c
   531  007F94  6A02               	clrf	(??_deco_cc+1)^0,c
   532                           
   533                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   534                           ; Switch size 1, requested type "simple"
   535                           ; Number of cases is 1, Range of values is 0 to 0
   536                           ; switch strategies available:
   537                           ; Name         Instructions Cycles
   538                           ; simple_byte            4     3 (average)
   539                           ;	Chosen strategy is simple_byte
   540  007F96  5002               	movf	(??_deco_cc+1)^0,w,c
   541  007F98  0A00               	xorlw	0	; case 0
   542  007F9A  B4D8               	btfsc	status,2,c
   543  007F9C  EFD2  F03F         	goto	l1264
   544  007FA0  EFFD  F03F         	goto	l760
   545  007FA4                     l1264:
   546                           
   547                           ; Switch size 1, requested type "simple"
   548                           ; Number of cases is 10, Range of values is 0 to 9
   549                           ; switch strategies available:
   550                           ; Name         Instructions Cycles
   551                           ; simple_byte           31    16 (average)
   552                           ;	Chosen strategy is simple_byte
   553  007FA4  5001               	movf	??_deco_cc^0,w,c
   554  007FA6  0A00               	xorlw	0	; case 0
   555  007FA8  B4D8               	btfsc	status,2,c
   556  007FAA  EFA0  F03F         	goto	l736
   557  007FAE  0A01               	xorlw	1	; case 1
   558  007FB0  B4D8               	btfsc	status,2,c
   559  007FB2  EFA4  F03F         	goto	l738
   560  007FB6  0A03               	xorlw	3	; case 2
   561  007FB8  B4D8               	btfsc	status,2,c
   562  007FBA  EFA8  F03F         	goto	l740
   563  007FBE  0A01               	xorlw	1	; case 3
   564  007FC0  B4D8               	btfsc	status,2,c
   565  007FC2  EFAC  F03F         	goto	l742
   566  007FC6  0A07               	xorlw	7	; case 4
   567  007FC8  B4D8               	btfsc	status,2,c
   568  007FCA  EFB0  F03F         	goto	l744
   569  007FCE  0A01               	xorlw	1	; case 5
   570  007FD0  B4D8               	btfsc	status,2,c
   571  007FD2  EFB4  F03F         	goto	l746
   572  007FD6  0A03               	xorlw	3	; case 6
   573  007FD8  B4D8               	btfsc	status,2,c
   574  007FDA  EFB8  F03F         	goto	l748
   575  007FDE  0A01               	xorlw	1	; case 7
   576  007FE0  B4D8               	btfsc	status,2,c
   577  007FE2  EFBC  F03F         	goto	l750
   578  007FE6  0A0F               	xorlw	15	; case 8
   579  007FE8  B4D8               	btfsc	status,2,c
   580  007FEA  EFC0  F03F         	goto	l752
   581  007FEE  0A01               	xorlw	1	; case 9
   582  007FF0  B4D8               	btfsc	status,2,c
   583  007FF2  EFC4  F03F         	goto	l754
   584  007FF6  EFFD  F03F         	goto	l760
   585  007FFA                     l760:
   586                           
   587                           ;./deco_catodo.h: 23:     return (127-myDeco);
   588  007FFA  5004               	movf	deco_cc@myDeco^0,w,c
   589  007FFC  087F               	sublw	127
   590  007FFE  0012               	return		;funcret
   591  008000                     __end_of_deco_cc:
   592                           	opt callstack 0
   593                           
   594 ;; *************** function ___awmod *****************
   595 ;; Defined at:
   596 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  dividend        2    0[COMRAM] int 
   599 ;;  divisor         2    2[COMRAM] int 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  sign            1    5[COMRAM] unsigned char 
   602 ;;  counter         1    4[COMRAM] unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  2    0[COMRAM] int 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   612 ;;      Params:         4       0       0       0       0       0       0       0       0
   613 ;;      Locals:         2       0       0       0       0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0       0       0       0       0
   615 ;;      Totals:         6       0       0       0       0       0       0       0       0
   616 ;;Total ram usage:        6 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; This function calls:
   619 ;;		Nothing
   620 ;; This function is called by:
   621 ;;		_v_display
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text3
   626  007DC2                     __ptext3:
   627                           	opt callstack 0
   628  007DC2                     ___awmod:
   629                           	opt callstack 29
   630  007DC2  0E00               	movlw	0
   631  007DC4  6E06               	movwf	___awmod@sign^0,c
   632  007DC6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   633  007DC8  EFEA  F03E         	goto	u610
   634  007DCC  EFE8  F03E         	goto	u611
   635  007DD0                     u611:
   636  007DD0  EFF0  F03E         	goto	l1178
   637  007DD4                     u610:
   638  007DD4  6C01               	negf	___awmod@dividend^0,c
   639  007DD6  1E02               	comf	(___awmod@dividend+1)^0,f,c
   640  007DD8  B0D8               	btfsc	status,0,c
   641  007DDA  2A02               	incf	(___awmod@dividend+1)^0,f,c
   642  007DDC  0E01               	movlw	1
   643  007DDE  6E06               	movwf	___awmod@sign^0,c
   644  007DE0                     l1178:
   645  007DE0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   646  007DE2  EFF7  F03E         	goto	u620
   647  007DE6  EFF5  F03E         	goto	u621
   648  007DEA                     u621:
   649  007DEA  EFFB  F03E         	goto	l1182
   650  007DEE                     u620:
   651  007DEE  6C03               	negf	___awmod@divisor^0,c
   652  007DF0  1E04               	comf	(___awmod@divisor+1)^0,f,c
   653  007DF2  B0D8               	btfsc	status,0,c
   654  007DF4  2A04               	incf	(___awmod@divisor+1)^0,f,c
   655  007DF6                     l1182:
   656  007DF6  5003               	movf	___awmod@divisor^0,w,c
   657  007DF8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   658  007DFA  B4D8               	btfsc	status,2,c
   659  007DFC  EF02  F03F         	goto	u631
   660  007E00  EF04  F03F         	goto	u630
   661  007E04                     u631:
   662  007E04  EF28  F03F         	goto	l1198
   663  007E08                     u630:
   664  007E08  0E01               	movlw	1
   665  007E0A  6E05               	movwf	___awmod@counter^0,c
   666  007E0C  EF0C  F03F         	goto	l1188
   667  007E10                     l1186:
   668  007E10  90D8               	bcf	status,0,c
   669  007E12  3603               	rlcf	___awmod@divisor^0,f,c
   670  007E14  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   671  007E16  2A05               	incf	___awmod@counter^0,f,c
   672  007E18                     l1188:
   673  007E18  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   674  007E1A  EF11  F03F         	goto	u641
   675  007E1E  EF13  F03F         	goto	u640
   676  007E22                     u641:
   677  007E22  EF08  F03F         	goto	l1186
   678  007E26                     u640:
   679  007E26                     l1190:
   680  007E26  5003               	movf	___awmod@divisor^0,w,c
   681  007E28  5C01               	subwf	___awmod@dividend^0,w,c
   682  007E2A  5004               	movf	(___awmod@divisor+1)^0,w,c
   683  007E2C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   684  007E2E  A0D8               	btfss	status,0,c
   685  007E30  EF1C  F03F         	goto	u651
   686  007E34  EF1E  F03F         	goto	u650
   687  007E38                     u651:
   688  007E38  EF22  F03F         	goto	l1194
   689  007E3C                     u650:
   690  007E3C  5003               	movf	___awmod@divisor^0,w,c
   691  007E3E  5E01               	subwf	___awmod@dividend^0,f,c
   692  007E40  5004               	movf	(___awmod@divisor+1)^0,w,c
   693  007E42  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   694  007E44                     l1194:
   695  007E44  90D8               	bcf	status,0,c
   696  007E46  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   697  007E48  3203               	rrcf	___awmod@divisor^0,f,c
   698  007E4A  2E05               	decfsz	___awmod@counter^0,f,c
   699  007E4C  EF13  F03F         	goto	l1190
   700  007E50                     l1198:
   701  007E50  5006               	movf	___awmod@sign^0,w,c
   702  007E52  B4D8               	btfsc	status,2,c
   703  007E54  EF2E  F03F         	goto	u661
   704  007E58  EF30  F03F         	goto	u660
   705  007E5C                     u661:
   706  007E5C  EF34  F03F         	goto	l1202
   707  007E60                     u660:
   708  007E60  6C01               	negf	___awmod@dividend^0,c
   709  007E62  1E02               	comf	(___awmod@dividend+1)^0,f,c
   710  007E64  B0D8               	btfsc	status,0,c
   711  007E66  2A02               	incf	(___awmod@dividend+1)^0,f,c
   712  007E68                     l1202:
   713  007E68  C001  F001         	movff	___awmod@dividend,?___awmod
   714  007E6C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   715  007E70  0012               	return		;funcret
   716  007E72                     __end_of___awmod:
   717                           	opt callstack 0
   718                           
   719 ;; *************** function ___awdiv *****************
   720 ;; Defined at:
   721 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  dividend        2    0[COMRAM] int 
   724 ;;  divisor         2    2[COMRAM] int 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  quotient        2    6[COMRAM] int 
   727 ;;  sign            1    5[COMRAM] unsigned char 
   728 ;;  counter         1    4[COMRAM] unsigned char 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  2    0[COMRAM] int 
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   738 ;;      Params:         4       0       0       0       0       0       0       0       0
   739 ;;      Locals:         4       0       0       0       0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0       0       0       0       0
   741 ;;      Totals:         8       0       0       0       0       0       0       0       0
   742 ;;Total ram usage:        8 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; This function calls:
   745 ;;		Nothing
   746 ;; This function is called by:
   747 ;;		_v_display
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text4
   752  007E72                     __ptext4:
   753                           	opt callstack 0
   754  007E72                     ___awdiv:
   755                           	opt callstack 29
   756  007E72  0E00               	movlw	0
   757  007E74  6E06               	movwf	___awdiv@sign^0,c
   758  007E76  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   759  007E78  EF42  F03F         	goto	u550
   760  007E7C  EF40  F03F         	goto	u551
   761  007E80                     u551:
   762  007E80  EF48  F03F         	goto	l1134
   763  007E84                     u550:
   764  007E84  6C03               	negf	___awdiv@divisor^0,c
   765  007E86  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   766  007E88  B0D8               	btfsc	status,0,c
   767  007E8A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   768  007E8C  0E01               	movlw	1
   769  007E8E  6E06               	movwf	___awdiv@sign^0,c
   770  007E90                     l1134:
   771  007E90  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   772  007E92  EF4F  F03F         	goto	u560
   773  007E96  EF4D  F03F         	goto	u561
   774  007E9A                     u561:
   775  007E9A  EF55  F03F         	goto	l1140
   776  007E9E                     u560:
   777  007E9E  6C01               	negf	___awdiv@dividend^0,c
   778  007EA0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   779  007EA2  B0D8               	btfsc	status,0,c
   780  007EA4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   781  007EA6  0E01               	movlw	1
   782  007EA8  1A06               	xorwf	___awdiv@sign^0,f,c
   783  007EAA                     l1140:
   784  007EAA  0E00               	movlw	0
   785  007EAC  6E08               	movwf	(___awdiv@quotient+1)^0,c
   786  007EAE  0E00               	movlw	0
   787  007EB0  6E07               	movwf	___awdiv@quotient^0,c
   788  007EB2  5003               	movf	___awdiv@divisor^0,w,c
   789  007EB4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   790  007EB6  B4D8               	btfsc	status,2,c
   791  007EB8  EF60  F03F         	goto	u571
   792  007EBC  EF62  F03F         	goto	u570
   793  007EC0                     u571:
   794  007EC0  EF8A  F03F         	goto	l1162
   795  007EC4                     u570:
   796  007EC4  0E01               	movlw	1
   797  007EC6  6E05               	movwf	___awdiv@counter^0,c
   798  007EC8  EF6A  F03F         	goto	l1148
   799  007ECC                     l1146:
   800  007ECC  90D8               	bcf	status,0,c
   801  007ECE  3603               	rlcf	___awdiv@divisor^0,f,c
   802  007ED0  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   803  007ED2  2A05               	incf	___awdiv@counter^0,f,c
   804  007ED4                     l1148:
   805  007ED4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   806  007ED6  EF6F  F03F         	goto	u581
   807  007EDA  EF71  F03F         	goto	u580
   808  007EDE                     u581:
   809  007EDE  EF66  F03F         	goto	l1146
   810  007EE2                     u580:
   811  007EE2                     l1150:
   812  007EE2  90D8               	bcf	status,0,c
   813  007EE4  3607               	rlcf	___awdiv@quotient^0,f,c
   814  007EE6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   815  007EE8  5003               	movf	___awdiv@divisor^0,w,c
   816  007EEA  5C01               	subwf	___awdiv@dividend^0,w,c
   817  007EEC  5004               	movf	(___awdiv@divisor+1)^0,w,c
   818  007EEE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   819  007EF0  A0D8               	btfss	status,0,c
   820  007EF2  EF7D  F03F         	goto	u591
   821  007EF6  EF7F  F03F         	goto	u590
   822  007EFA                     u591:
   823  007EFA  EF84  F03F         	goto	l1158
   824  007EFE                     u590:
   825  007EFE  5003               	movf	___awdiv@divisor^0,w,c
   826  007F00  5E01               	subwf	___awdiv@dividend^0,f,c
   827  007F02  5004               	movf	(___awdiv@divisor+1)^0,w,c
   828  007F04  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   829  007F06  8007               	bsf	___awdiv@quotient^0,0,c
   830  007F08                     l1158:
   831  007F08  90D8               	bcf	status,0,c
   832  007F0A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   833  007F0C  3203               	rrcf	___awdiv@divisor^0,f,c
   834  007F0E  2E05               	decfsz	___awdiv@counter^0,f,c
   835  007F10  EF71  F03F         	goto	l1150
   836  007F14                     l1162:
   837  007F14  5006               	movf	___awdiv@sign^0,w,c
   838  007F16  B4D8               	btfsc	status,2,c
   839  007F18  EF90  F03F         	goto	u601
   840  007F1C  EF92  F03F         	goto	u600
   841  007F20                     u601:
   842  007F20  EF96  F03F         	goto	l1166
   843  007F24                     u600:
   844  007F24  6C07               	negf	___awdiv@quotient^0,c
   845  007F26  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   846  007F28  B0D8               	btfsc	status,0,c
   847  007F2A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   848  007F2C                     l1166:
   849  007F2C  C007  F001         	movff	___awdiv@quotient,?___awdiv
   850  007F30  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   851  007F34  0012               	return		;funcret
   852  007F36                     __end_of___awdiv:
   853                           	opt callstack 0
   854  0000                     
   855                           	psect	rparam
   856  0000                     tosu	equ	0xFFF
   857                           tosh	equ	0xFFE
   858                           tosl	equ	0xFFD
   859                           stkptr	equ	0xFFC
   860                           pclatu	equ	0xFFB
   861                           pclath	equ	0xFFA
   862                           pcl	equ	0xFF9
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           prodh	equ	0xFF4
   868                           prodl	equ	0xFF3
   869                           indf0	equ	0xFEF
   870                           postinc0	equ	0xFEE
   871                           postdec0	equ	0xFED
   872                           preinc0	equ	0xFEC
   873                           plusw0	equ	0xFEB
   874                           fsr0h	equ	0xFEA
   875                           fsr0l	equ	0xFE9
   876                           wreg	equ	0xFE8
   877                           indf1	equ	0xFE7
   878                           postinc1	equ	0xFE6
   879                           postdec1	equ	0xFE5
   880                           preinc1	equ	0xFE4
   881                           plusw1	equ	0xFE3
   882                           fsr1h	equ	0xFE2
   883                           fsr1l	equ	0xFE1
   884                           bsr	equ	0xFE0
   885                           indf2	equ	0xFDF
   886                           postinc2	equ	0xFDE
   887                           postdec2	equ	0xFDD
   888                           preinc2	equ	0xFDC
   889                           plusw2	equ	0xFDB
   890                           fsr2h	equ	0xFDA
   891                           fsr2l	equ	0xFD9
   892                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_v_display
    _v_display->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     930
                          _v_display
 ---------------------------------------------------------------------------------
 (1) _v_display                                            1     1      0     930
                                              8 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
                            _deco_cc
 ---------------------------------------------------------------------------------
 (2) _deco_cc                                              4     4      0      30
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _v_display
     ___awdiv
     ___awmod
     _deco_cc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9       E       1       14.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      20        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue May 19 16:56:09 2020

                     l40 7D18                       l29 7FFE             ___awdiv@sign 0006  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l305 7E70  
                    l292 7F34                      l740 7F50                      l750 7F78  
                    l742 7F58                      l734 7F38                      l752 7F80  
                    l744 7F60                      l760 7FFA                      l736 7F40  
                    l754 7F88                      l746 7F68                      l738 7F48  
                    l748 7F70                      l758 7F90             __CFG_CPB$OFF 000000  
                    u600 7F24                      u601 7F20                      u610 7DD4  
           __CFG_CPD$OFF 000000                      u611 7DD0                      u620 7DEE  
                    u700 7D84                      u621 7DEA                      u701 7D80  
                    u550 7E84                      u630 7E08                      u710 7D9A  
                    u551 7E80                      u631 7E04                      u711 7D96  
                    u560 7E9E                      u640 7E26                      u720 7DAE  
                    u561 7E9A                      u641 7E22                      u721 7DAA  
                    u570 7EC4                      u650 7E3C                      u571 7EC0  
                    u651 7E38                      u580 7EE2                      u660 7E60  
                    u581 7EDE                      u661 7E5C                      u590 7EFE  
                    u670 7D38                      u591 7EFA                      u671 7D34  
                    u680 7D4E                      u737 7CF2                      u681 7D4A  
                    u690 7D6E                      u747 7D0E                      u691 7D6A  
           __CFG_BOR$OFF 000000             ___awmod@sign 0006                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1200 7E60  
                   l1130 7E84                     l1202 7E68                     l1210 7CE2  
                   l1140 7EAA                     l1132 7E8C                     l1212 7CEC  
                   l1220 7D1A                     l1150 7EE2                     l1142 7EB2  
                   l1134 7E90                     l1126 7E72                     l1214 7CFC  
                   l1206 7CB0                     l1230 7D2A                     l1222 7D22  
                   l1160 7F0E                     l1152 7EE8                     l1144 7EC4  
                   l1136 7E9E                     l1128 7E76                     l1216 7CFE  
                   l1208 7CE0                     l1240 7D52                     l1224 7D24  
                   l1154 7EFE                     l1146 7ECC                     l1162 7F14  
                   l1138 7EA6                     l1170 7DC2                     l1218 7D00  
                   l1250 7D8C                     l1242 7D6E                     l1234 7D3C  
                   l1226 7D26                     l1164 7F24                     l1156 7F06  
                   l1148 7ED4                     l1180 7DEE                     l1172 7DC6  
                   l1252 7D9A                     l1236 7D40                     l1244 7D76  
                   l1228 7D28                     l1166 7F2C                     l1158 7F08  
                   l1190 7E26                     l1182 7DF6                     l1174 7DD4  
                   l1254 7DA0                     l1238 7D4E                     l1192 7E3C  
                   l1184 7E08                     l1176 7DDC                     l1264 7FA4  
                   l1256 7DAE                     l1248 7D88                     l1194 7E44  
                   l1186 7E10                     l1178 7DE0                     l1258 7DB6  
                   l1196 7E4A                     l1188 7E18                     l1198 7E50  
                   _main 7D1A                     start 0000            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001          __end_of___awdiv 7F36  
        __end_of___awmod 7E72          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _PORTD 000F83            __CFG_USBDIV$1 000000                    _TRISD 000F95  
        __end_of_deco_cc 8000            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  tablat 000FF5                    status 000FD8           __CFG_ICPRT$OFF 000000  
        __initialization 7C84             __end_of_main 7DC2                   ??_main 000A  
          __activetblptr 000002                   _ADCON1 000FC1         ___awdiv@dividend 0001  
         __CFG_XINST$OFF 000000                ??___awdiv 0005                   _decena 000D  
         __CFG_STVREN$ON 000000                ??___awmod 0005                ??_deco_cc 0001  
       ___awdiv@quotient 0007          ___awmod@divisor 0003                   _numero 000A  
        ___awmod@counter 0005                   _unidad 000E            deco_cc@myDeco 0004  
           __pdataCOMRAM 000A            deco_cc@numero 0003                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7CA6          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001       __size_of_v_display 006A          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 7E72  
                ___awmod 7DC2                  _deco_cc 7F36                  __pcinit 7C84  
                __ramtop 0800                  __ptext0 7D1A                  __ptext1 7CB0  
                __ptext2 7F36                  __ptext3 7DC2                  __ptext4 7E72  
       ___awmod@dividend 0001     end_of_initialization 7CA6        __end_of_v_display 7D1A  
          __Lmediumconst 0000                _PORTAbits 000F80                _PORTEbits 000F84  
              _TRISEbits 000F96            __pidataCOMRAM 7C81      start_initialization 7C84  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 000D                 ?___awdiv 0001  
               ?___awmod 0001                 ?_deco_cc 0001                _v_display 7CB0  
       __CFG_WDTPS$32768 000000               ?_v_display 0001                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 00C4         __size_of___awmod 00B0  
       __size_of_deco_cc 00CA            __size_of_main 00A8                 _tiempo_m 000C  
  __CFG_CPUDIV$OSC1_PLL2 000000              ??_v_display 0009      __CFG_FOSC$INTOSC_XT 000000  
