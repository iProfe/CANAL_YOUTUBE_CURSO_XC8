

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon May 18 20:47:42 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	nvCOMRAM
    52  000009                     __pnvCOMRAM:
    53                           	opt callstack 0
    54  000009                     _decena:
    55                           	opt callstack 0
    56  000009                     	ds	1
    57  00000A                     _unidad:
    58                           	opt callstack 0
    59  00000A                     	ds	1
    60  00000B                     _result:
    61                           	opt callstack 0
    62  00000B                     	ds	1
    63  00000C                     _num2:
    64                           	opt callstack 0
    65  00000C                     	ds	1
    66  00000D                     _num1:
    67                           	opt callstack 0
    68  00000D                     	ds	1
    69  0000                     _PORTD	set	3971
    70  0000                     _PORTA	set	3968
    71  0000                     _PORTB	set	3969
    72  0000                     _TRISD	set	3989
    73  0000                     _TRISB	set	3987
    74  0000                     _TRISA	set	3986
    75                           
    76                           ; #config settings
    77  0000                     
    78                           	psect	cinit
    79  007D52                     __pcinit:
    80                           	opt callstack 0
    81  007D52                     start_initialization:
    82                           	opt callstack 0
    83  007D52                     __initialization:
    84                           	opt callstack 0
    85                           
    86                           ; Clear objects allocated to COMRAM (2 bytes)
    87  007D52  6A0F               	clrf	(__pbssCOMRAM+1)& (0+255),c
    88  007D54  6A0E               	clrf	__pbssCOMRAM& (0+255),c
    89  007D56                     end_of_initialization:
    90                           	opt callstack 0
    91  007D56                     __end_of__initialization:
    92                           	opt callstack 0
    93  007D56  0E00               	movlw	low (__Lmediumconst shr (0+16))
    94  007D58  6EF8               	movwf	tblptru,c
    95  007D5A  0100               	movlb	0
    96  007D5C  EFB0  F03E         	goto	_main	;jump to C main() function
    97                           
    98                           	psect	bssCOMRAM
    99  00000E                     __pbssCOMRAM:
   100                           	opt callstack 0
   101  00000E                     _i:
   102                           	opt callstack 0
   103  00000E                     	ds	2
   104                           
   105                           	psect	cstackCOMRAM
   106  000001                     __pcstackCOMRAM:
   107                           	opt callstack 0
   108  000001                     ??_deco_cc:
   109  000001                     ?___awdiv:
   110                           	opt callstack 0
   111  000001                     ?___awmod:
   112                           	opt callstack 0
   113  000001                     ___awdiv@dividend:
   114                           	opt callstack 0
   115  000001                     ___awmod@dividend:
   116                           	opt callstack 0
   117                           
   118                           ; 2 bytes @ 0x0
   119  000001                     	ds	2
   120  000003                     deco_cc@numero:
   121                           	opt callstack 0
   122  000003                     ___awdiv@divisor:
   123                           	opt callstack 0
   124  000003                     ___awmod@divisor:
   125                           	opt callstack 0
   126                           
   127                           ; 2 bytes @ 0x2
   128  000003                     	ds	1
   129  000004                     deco_cc@myDeco:
   130                           	opt callstack 0
   131                           
   132                           ; 1 bytes @ 0x3
   133  000004                     	ds	1
   134  000005                     ___awdiv@counter:
   135                           	opt callstack 0
   136  000005                     ___awmod@counter:
   137                           	opt callstack 0
   138                           
   139                           ; 1 bytes @ 0x4
   140  000005                     	ds	1
   141  000006                     ___awdiv@sign:
   142                           	opt callstack 0
   143  000006                     ___awmod@sign:
   144                           	opt callstack 0
   145                           
   146                           ; 1 bytes @ 0x5
   147  000006                     	ds	1
   148  000007                     ___awdiv@quotient:
   149                           	opt callstack 0
   150                           
   151                           ; 2 bytes @ 0x6
   152  000007                     	ds	2
   153  000009                     
   154                           ; 1 bytes @ 0x8
   155 ;;
   156 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   157 ;;
   158 ;; *************** function _main *****************
   159 ;; Defined at:
   160 ;;		line 14 in file "main.c"
   161 ;; Parameters:    Size  Location     Type
   162 ;;		None
   163 ;; Auto vars:     Size  Location     Type
   164 ;;		None
   165 ;; Return value:  Size  Location     Type
   166 ;;                  1    wreg      void 
   167 ;; Registers used:
   168 ;;		wreg, status,2, status,0, cstack
   169 ;; Tracked objects:
   170 ;;		On entry : 0/0
   171 ;;		On exit  : 0/0
   172 ;;		Unchanged: 0/0
   173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   174 ;;      Params:         0       0       0       0       0       0       0       0       0
   175 ;;      Locals:         0       0       0       0       0       0       0       0       0
   176 ;;      Temps:          0       0       0       0       0       0       0       0       0
   177 ;;      Totals:         0       0       0       0       0       0       0       0       0
   178 ;;Total ram usage:        0 bytes
   179 ;; Hardware stack levels required when called:    1
   180 ;; This function calls:
   181 ;;		___awdiv
   182 ;;		___awmod
   183 ;;		_deco_cc
   184 ;; This function is called by:
   185 ;;		Startup code after reset
   186 ;; This function uses a non-reentrant model
   187 ;;
   188                           
   189                           	psect	text0
   190  007D60                     __ptext0:
   191                           	opt callstack 0
   192  007D60                     _main:
   193                           	opt callstack 30
   194  007D60                     
   195                           ;main.c: 15:     TRISA = 0x00;
   196  007D60  0E00               	movlw	0
   197  007D62  6E92               	movwf	146,c	;volatile
   198  007D64                     
   199                           ;main.c: 16:     TRISB = 0xFF;
   200  007D64  6893               	setf	147,c	;volatile
   201                           
   202                           ;main.c: 17:     TRISD = 0x00;
   203  007D66  0E00               	movlw	0
   204  007D68  6E95               	movwf	149,c	;volatile
   205  007D6A                     l943:
   206                           
   207                           ;main.c: 19:         num1 = PORTB & 0b00001111;
   208  007D6A  5081               	movf	129,w,c	;volatile
   209  007D6C  0B0F               	andlw	15
   210  007D6E  6E0D               	movwf	_num1^0,c
   211  007D70                     
   212                           ;main.c: 20:         num2 = (PORTB & 0b11110000)>>4;
   213  007D70  3881               	swapf	129,w,c	;volatile
   214  007D72  0B0F               	andlw	15
   215  007D74  0B0F               	andlw	15
   216  007D76  6E0C               	movwf	_num2^0,c
   217  007D78                     
   218                           ;main.c: 21:         result=num1+num2;
   219  007D78  500D               	movf	_num1^0,w,c
   220  007D7A  240C               	addwf	_num2^0,w,c
   221  007D7C  6E0B               	movwf	_result^0,c
   222  007D7E                     
   223                           ;main.c: 22:         decena = result / 10;
   224  007D7E  C00B  F001         	movff	_result,___awdiv@dividend
   225  007D82  6A02               	clrf	(___awdiv@dividend+1)^0,c
   226  007D84  0E00               	movlw	0
   227  007D86  6E04               	movwf	(___awdiv@divisor+1)^0,c
   228  007D88  0E0A               	movlw	10
   229  007D8A  6E03               	movwf	___awdiv@divisor^0,c
   230  007D8C  EC39  F03F         	call	___awdiv	;wreg free
   231  007D90  5001               	movf	?___awdiv^0,w,c
   232  007D92  6E09               	movwf	_decena^0,c
   233  007D94                     
   234                           ;main.c: 23:         unidad = result % 10;
   235  007D94  C00B  F001         	movff	_result,___awmod@dividend
   236  007D98  6A02               	clrf	(___awmod@dividend+1)^0,c
   237  007D9A  0E00               	movlw	0
   238  007D9C  6E04               	movwf	(___awmod@divisor+1)^0,c
   239  007D9E  0E0A               	movlw	10
   240  007DA0  6E03               	movwf	___awmod@divisor^0,c
   241  007DA2  ECE1  F03E         	call	___awmod	;wreg free
   242  007DA6  5001               	movf	?___awmod^0,w,c
   243  007DA8  6E0A               	movwf	_unidad^0,c
   244  007DAA                     
   245                           ;main.c: 24:         PORTA = deco_cc(decena);
   246  007DAA  5009               	movf	_decena^0,w,c
   247  007DAC  EC9B  F03F         	call	_deco_cc
   248  007DB0  6E80               	movwf	128,c	;volatile
   249  007DB2                     
   250                           ;main.c: 25:         PORTD = deco_cc(unidad);
   251  007DB2  500A               	movf	_unidad^0,w,c
   252  007DB4  EC9B  F03F         	call	_deco_cc
   253  007DB8  6E83               	movwf	131,c	;volatile
   254  007DBA  EFB5  F03E         	goto	l943
   255  007DBE  EF00  F000         	goto	start
   256  007DC2                     __end_of_main:
   257                           	opt callstack 0
   258                           
   259 ;; *************** function _deco_cc *****************
   260 ;; Defined at:
   261 ;;		line 8 in file "./deco_catodo.h"
   262 ;; Parameters:    Size  Location     Type
   263 ;;  numero          1    wreg     unsigned char 
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  numero          1    2[COMRAM] unsigned char 
   266 ;;  myDeco          1    3[COMRAM] unsigned char 
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      unsigned char 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   276 ;;      Params:         0       0       0       0       0       0       0       0       0
   277 ;;      Locals:         2       0       0       0       0       0       0       0       0
   278 ;;      Temps:          2       0       0       0       0       0       0       0       0
   279 ;;      Totals:         4       0       0       0       0       0       0       0       0
   280 ;;Total ram usage:        4 bytes
   281 ;; Hardware stack levels used:    1
   282 ;; This function calls:
   283 ;;		Nothing
   284 ;; This function is called by:
   285 ;;		_main
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text1
   290  007F36                     __ptext1:
   291                           	opt callstack 0
   292  007F36                     _deco_cc:
   293                           	opt callstack 30
   294                           
   295                           ;incstack = 0
   296                           ;deco_cc@numero stored from wreg
   297  007F36  6E03               	movwf	deco_cc@numero^0,c
   298  007F38                     
   299                           ;./deco_catodo.h: 9:     char myDeco=0;
   300  007F38  0E00               	movlw	0
   301  007F3A  6E04               	movwf	deco_cc@myDeco^0,c
   302                           
   303                           ;./deco_catodo.h: 11:     switch(numero){
   304  007F3C  EFC8  F03F         	goto	l747
   305  007F40                     l725:
   306  007F40  0E40               	movlw	64
   307  007F42  6E04               	movwf	deco_cc@myDeco^0,c
   308  007F44  EFFD  F03F         	goto	l749
   309  007F48                     l727:
   310  007F48  0E79               	movlw	121
   311  007F4A  6E04               	movwf	deco_cc@myDeco^0,c
   312  007F4C  EFFD  F03F         	goto	l749
   313  007F50                     l729:
   314  007F50  0E24               	movlw	36
   315  007F52  6E04               	movwf	deco_cc@myDeco^0,c
   316  007F54  EFFD  F03F         	goto	l749
   317  007F58                     l731:
   318  007F58  0E30               	movlw	48
   319  007F5A  6E04               	movwf	deco_cc@myDeco^0,c
   320  007F5C  EFFD  F03F         	goto	l749
   321  007F60                     l733:
   322  007F60  0E19               	movlw	25
   323  007F62  6E04               	movwf	deco_cc@myDeco^0,c
   324  007F64  EFFD  F03F         	goto	l749
   325  007F68                     l735:
   326  007F68  0E12               	movlw	18
   327  007F6A  6E04               	movwf	deco_cc@myDeco^0,c
   328  007F6C  EFFD  F03F         	goto	l749
   329  007F70                     l737:
   330  007F70  0E02               	movlw	2
   331  007F72  6E04               	movwf	deco_cc@myDeco^0,c
   332  007F74  EFFD  F03F         	goto	l749
   333  007F78                     l739:
   334  007F78  0E78               	movlw	120
   335  007F7A  6E04               	movwf	deco_cc@myDeco^0,c
   336  007F7C  EFFD  F03F         	goto	l749
   337  007F80                     l741:
   338  007F80  0E00               	movlw	0
   339  007F82  6E04               	movwf	deco_cc@myDeco^0,c
   340  007F84  EFFD  F03F         	goto	l749
   341  007F88                     l743:
   342  007F88  0E10               	movlw	16
   343  007F8A  6E04               	movwf	deco_cc@myDeco^0,c
   344  007F8C  EFFD  F03F         	goto	l749
   345  007F90                     l747:
   346  007F90  5003               	movf	deco_cc@numero^0,w,c
   347  007F92  6E01               	movwf	??_deco_cc^0,c
   348  007F94  6A02               	clrf	(??_deco_cc+1)^0,c
   349                           
   350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   351                           ; Switch size 1, requested type "simple"
   352                           ; Number of cases is 1, Range of values is 0 to 0
   353                           ; switch strategies available:
   354                           ; Name         Instructions Cycles
   355                           ; simple_byte            4     3 (average)
   356                           ;	Chosen strategy is simple_byte
   357  007F96  5002               	movf	(??_deco_cc+1)^0,w,c
   358  007F98  0A00               	xorlw	0	; case 0
   359  007F9A  B4D8               	btfsc	status,2,c
   360  007F9C  EFD2  F03F         	goto	l961
   361  007FA0  EFFD  F03F         	goto	l749
   362  007FA4                     l961:
   363                           
   364                           ; Switch size 1, requested type "simple"
   365                           ; Number of cases is 10, Range of values is 0 to 9
   366                           ; switch strategies available:
   367                           ; Name         Instructions Cycles
   368                           ; simple_byte           31    16 (average)
   369                           ;	Chosen strategy is simple_byte
   370  007FA4  5001               	movf	??_deco_cc^0,w,c
   371  007FA6  0A00               	xorlw	0	; case 0
   372  007FA8  B4D8               	btfsc	status,2,c
   373  007FAA  EFA0  F03F         	goto	l725
   374  007FAE  0A01               	xorlw	1	; case 1
   375  007FB0  B4D8               	btfsc	status,2,c
   376  007FB2  EFA4  F03F         	goto	l727
   377  007FB6  0A03               	xorlw	3	; case 2
   378  007FB8  B4D8               	btfsc	status,2,c
   379  007FBA  EFA8  F03F         	goto	l729
   380  007FBE  0A01               	xorlw	1	; case 3
   381  007FC0  B4D8               	btfsc	status,2,c
   382  007FC2  EFAC  F03F         	goto	l731
   383  007FC6  0A07               	xorlw	7	; case 4
   384  007FC8  B4D8               	btfsc	status,2,c
   385  007FCA  EFB0  F03F         	goto	l733
   386  007FCE  0A01               	xorlw	1	; case 5
   387  007FD0  B4D8               	btfsc	status,2,c
   388  007FD2  EFB4  F03F         	goto	l735
   389  007FD6  0A03               	xorlw	3	; case 6
   390  007FD8  B4D8               	btfsc	status,2,c
   391  007FDA  EFB8  F03F         	goto	l737
   392  007FDE  0A01               	xorlw	1	; case 7
   393  007FE0  B4D8               	btfsc	status,2,c
   394  007FE2  EFBC  F03F         	goto	l739
   395  007FE6  0A0F               	xorlw	15	; case 8
   396  007FE8  B4D8               	btfsc	status,2,c
   397  007FEA  EFC0  F03F         	goto	l741
   398  007FEE  0A01               	xorlw	1	; case 9
   399  007FF0  B4D8               	btfsc	status,2,c
   400  007FF2  EFC4  F03F         	goto	l743
   401  007FF6  EFFD  F03F         	goto	l749
   402  007FFA                     l749:
   403                           
   404                           ;./deco_catodo.h: 23:     return (127-myDeco);
   405  007FFA  5004               	movf	deco_cc@myDeco^0,w,c
   406  007FFC  087F               	sublw	127
   407  007FFE  0012               	return		;funcret
   408  008000                     __end_of_deco_cc:
   409                           	opt callstack 0
   410                           
   411 ;; *************** function ___awmod *****************
   412 ;; Defined at:
   413 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;  dividend        2    0[COMRAM] int 
   416 ;;  divisor         2    2[COMRAM] int 
   417 ;; Auto vars:     Size  Location     Type
   418 ;;  sign            1    5[COMRAM] unsigned char 
   419 ;;  counter         1    4[COMRAM] unsigned char 
   420 ;; Return value:  Size  Location     Type
   421 ;;                  2    0[COMRAM] int 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   429 ;;      Params:         4       0       0       0       0       0       0       0       0
   430 ;;      Locals:         2       0       0       0       0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0       0       0       0       0
   432 ;;      Totals:         6       0       0       0       0       0       0       0       0
   433 ;;Total ram usage:        6 bytes
   434 ;; Hardware stack levels used:    1
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		_main
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text2
   443  007DC2                     __ptext2:
   444                           	opt callstack 0
   445  007DC2                     ___awmod:
   446                           	opt callstack 30
   447  007DC2  0E00               	movlw	0
   448  007DC4  6E06               	movwf	___awmod@sign^0,c
   449  007DC6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   450  007DC8  EFEA  F03E         	goto	u190
   451  007DCC  EFE8  F03E         	goto	u191
   452  007DD0                     u191:
   453  007DD0  EFF0  F03E         	goto	l911
   454  007DD4                     u190:
   455  007DD4  6C01               	negf	___awmod@dividend^0,c
   456  007DD6  1E02               	comf	(___awmod@dividend+1)^0,f,c
   457  007DD8  B0D8               	btfsc	status,0,c
   458  007DDA  2A02               	incf	(___awmod@dividend+1)^0,f,c
   459  007DDC  0E01               	movlw	1
   460  007DDE  6E06               	movwf	___awmod@sign^0,c
   461  007DE0                     l911:
   462  007DE0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   463  007DE2  EFF7  F03E         	goto	u200
   464  007DE6  EFF5  F03E         	goto	u201
   465  007DEA                     u201:
   466  007DEA  EFFB  F03E         	goto	l915
   467  007DEE                     u200:
   468  007DEE  6C03               	negf	___awmod@divisor^0,c
   469  007DF0  1E04               	comf	(___awmod@divisor+1)^0,f,c
   470  007DF2  B0D8               	btfsc	status,0,c
   471  007DF4  2A04               	incf	(___awmod@divisor+1)^0,f,c
   472  007DF6                     l915:
   473  007DF6  5003               	movf	___awmod@divisor^0,w,c
   474  007DF8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   475  007DFA  B4D8               	btfsc	status,2,c
   476  007DFC  EF02  F03F         	goto	u211
   477  007E00  EF04  F03F         	goto	u210
   478  007E04                     u211:
   479  007E04  EF28  F03F         	goto	l931
   480  007E08                     u210:
   481  007E08  0E01               	movlw	1
   482  007E0A  6E05               	movwf	___awmod@counter^0,c
   483  007E0C  EF0C  F03F         	goto	l921
   484  007E10                     l919:
   485  007E10  90D8               	bcf	status,0,c
   486  007E12  3603               	rlcf	___awmod@divisor^0,f,c
   487  007E14  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   488  007E16  2A05               	incf	___awmod@counter^0,f,c
   489  007E18                     l921:
   490  007E18  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   491  007E1A  EF11  F03F         	goto	u221
   492  007E1E  EF13  F03F         	goto	u220
   493  007E22                     u221:
   494  007E22  EF08  F03F         	goto	l919
   495  007E26                     u220:
   496  007E26                     l923:
   497  007E26  5003               	movf	___awmod@divisor^0,w,c
   498  007E28  5C01               	subwf	___awmod@dividend^0,w,c
   499  007E2A  5004               	movf	(___awmod@divisor+1)^0,w,c
   500  007E2C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   501  007E2E  A0D8               	btfss	status,0,c
   502  007E30  EF1C  F03F         	goto	u231
   503  007E34  EF1E  F03F         	goto	u230
   504  007E38                     u231:
   505  007E38  EF22  F03F         	goto	l927
   506  007E3C                     u230:
   507  007E3C  5003               	movf	___awmod@divisor^0,w,c
   508  007E3E  5E01               	subwf	___awmod@dividend^0,f,c
   509  007E40  5004               	movf	(___awmod@divisor+1)^0,w,c
   510  007E42  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   511  007E44                     l927:
   512  007E44  90D8               	bcf	status,0,c
   513  007E46  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   514  007E48  3203               	rrcf	___awmod@divisor^0,f,c
   515  007E4A  2E05               	decfsz	___awmod@counter^0,f,c
   516  007E4C  EF13  F03F         	goto	l923
   517  007E50                     l931:
   518  007E50  5006               	movf	___awmod@sign^0,w,c
   519  007E52  B4D8               	btfsc	status,2,c
   520  007E54  EF2E  F03F         	goto	u241
   521  007E58  EF30  F03F         	goto	u240
   522  007E5C                     u241:
   523  007E5C  EF34  F03F         	goto	l935
   524  007E60                     u240:
   525  007E60  6C01               	negf	___awmod@dividend^0,c
   526  007E62  1E02               	comf	(___awmod@dividend+1)^0,f,c
   527  007E64  B0D8               	btfsc	status,0,c
   528  007E66  2A02               	incf	(___awmod@dividend+1)^0,f,c
   529  007E68                     l935:
   530  007E68  C001  F001         	movff	___awmod@dividend,?___awmod
   531  007E6C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   532  007E70  0012               	return		;funcret
   533  007E72                     __end_of___awmod:
   534                           	opt callstack 0
   535                           
   536 ;; *************** function ___awdiv *****************
   537 ;; Defined at:
   538 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;  dividend        2    0[COMRAM] int 
   541 ;;  divisor         2    2[COMRAM] int 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  quotient        2    6[COMRAM] int 
   544 ;;  sign            1    5[COMRAM] unsigned char 
   545 ;;  counter         1    4[COMRAM] unsigned char 
   546 ;; Return value:  Size  Location     Type
   547 ;;                  2    0[COMRAM] int 
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   555 ;;      Params:         4       0       0       0       0       0       0       0       0
   556 ;;      Locals:         4       0       0       0       0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0       0       0       0       0
   558 ;;      Totals:         8       0       0       0       0       0       0       0       0
   559 ;;Total ram usage:        8 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           	psect	text3
   569  007E72                     __ptext3:
   570                           	opt callstack 0
   571  007E72                     ___awdiv:
   572                           	opt callstack 30
   573  007E72  0E00               	movlw	0
   574  007E74  6E06               	movwf	___awdiv@sign^0,c
   575  007E76  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   576  007E78  EF42  F03F         	goto	u130
   577  007E7C  EF40  F03F         	goto	u131
   578  007E80                     u131:
   579  007E80  EF48  F03F         	goto	l867
   580  007E84                     u130:
   581  007E84  6C03               	negf	___awdiv@divisor^0,c
   582  007E86  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   583  007E88  B0D8               	btfsc	status,0,c
   584  007E8A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   585  007E8C  0E01               	movlw	1
   586  007E8E  6E06               	movwf	___awdiv@sign^0,c
   587  007E90                     l867:
   588  007E90  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   589  007E92  EF4F  F03F         	goto	u140
   590  007E96  EF4D  F03F         	goto	u141
   591  007E9A                     u141:
   592  007E9A  EF55  F03F         	goto	l873
   593  007E9E                     u140:
   594  007E9E  6C01               	negf	___awdiv@dividend^0,c
   595  007EA0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   596  007EA2  B0D8               	btfsc	status,0,c
   597  007EA4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   598  007EA6  0E01               	movlw	1
   599  007EA8  1A06               	xorwf	___awdiv@sign^0,f,c
   600  007EAA                     l873:
   601  007EAA  0E00               	movlw	0
   602  007EAC  6E08               	movwf	(___awdiv@quotient+1)^0,c
   603  007EAE  0E00               	movlw	0
   604  007EB0  6E07               	movwf	___awdiv@quotient^0,c
   605  007EB2  5003               	movf	___awdiv@divisor^0,w,c
   606  007EB4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   607  007EB6  B4D8               	btfsc	status,2,c
   608  007EB8  EF60  F03F         	goto	u151
   609  007EBC  EF62  F03F         	goto	u150
   610  007EC0                     u151:
   611  007EC0  EF8A  F03F         	goto	l895
   612  007EC4                     u150:
   613  007EC4  0E01               	movlw	1
   614  007EC6  6E05               	movwf	___awdiv@counter^0,c
   615  007EC8  EF6A  F03F         	goto	l881
   616  007ECC                     l879:
   617  007ECC  90D8               	bcf	status,0,c
   618  007ECE  3603               	rlcf	___awdiv@divisor^0,f,c
   619  007ED0  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   620  007ED2  2A05               	incf	___awdiv@counter^0,f,c
   621  007ED4                     l881:
   622  007ED4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   623  007ED6  EF6F  F03F         	goto	u161
   624  007EDA  EF71  F03F         	goto	u160
   625  007EDE                     u161:
   626  007EDE  EF66  F03F         	goto	l879
   627  007EE2                     u160:
   628  007EE2                     l883:
   629  007EE2  90D8               	bcf	status,0,c
   630  007EE4  3607               	rlcf	___awdiv@quotient^0,f,c
   631  007EE6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   632  007EE8  5003               	movf	___awdiv@divisor^0,w,c
   633  007EEA  5C01               	subwf	___awdiv@dividend^0,w,c
   634  007EEC  5004               	movf	(___awdiv@divisor+1)^0,w,c
   635  007EEE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   636  007EF0  A0D8               	btfss	status,0,c
   637  007EF2  EF7D  F03F         	goto	u171
   638  007EF6  EF7F  F03F         	goto	u170
   639  007EFA                     u171:
   640  007EFA  EF84  F03F         	goto	l891
   641  007EFE                     u170:
   642  007EFE  5003               	movf	___awdiv@divisor^0,w,c
   643  007F00  5E01               	subwf	___awdiv@dividend^0,f,c
   644  007F02  5004               	movf	(___awdiv@divisor+1)^0,w,c
   645  007F04  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   646  007F06  8007               	bsf	___awdiv@quotient^0,0,c
   647  007F08                     l891:
   648  007F08  90D8               	bcf	status,0,c
   649  007F0A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   650  007F0C  3203               	rrcf	___awdiv@divisor^0,f,c
   651  007F0E  2E05               	decfsz	___awdiv@counter^0,f,c
   652  007F10  EF71  F03F         	goto	l883
   653  007F14                     l895:
   654  007F14  5006               	movf	___awdiv@sign^0,w,c
   655  007F16  B4D8               	btfsc	status,2,c
   656  007F18  EF90  F03F         	goto	u181
   657  007F1C  EF92  F03F         	goto	u180
   658  007F20                     u181:
   659  007F20  EF96  F03F         	goto	l899
   660  007F24                     u180:
   661  007F24  6C07               	negf	___awdiv@quotient^0,c
   662  007F26  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   663  007F28  B0D8               	btfsc	status,0,c
   664  007F2A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   665  007F2C                     l899:
   666  007F2C  C007  F001         	movff	___awdiv@quotient,?___awdiv
   667  007F30  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   668  007F34  0012               	return		;funcret
   669  007F36                     __end_of___awdiv:
   670                           	opt callstack 0
   671  0000                     
   672                           	psect	rparam
   673  0000                     tosu	equ	0xFFF
   674                           tosh	equ	0xFFE
   675                           tosl	equ	0xFFD
   676                           stkptr	equ	0xFFC
   677                           pclatu	equ	0xFFB
   678                           pclath	equ	0xFFA
   679                           pcl	equ	0xFF9
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           prodh	equ	0xFF4
   685                           prodl	equ	0xFF3
   686                           indf0	equ	0xFEF
   687                           postinc0	equ	0xFEE
   688                           postdec0	equ	0xFED
   689                           preinc0	equ	0xFEC
   690                           plusw0	equ	0xFEB
   691                           fsr0h	equ	0xFEA
   692                           fsr0l	equ	0xFE9
   693                           wreg	equ	0xFE8
   694                           indf1	equ	0xFE7
   695                           postinc1	equ	0xFE6
   696                           postdec1	equ	0xFE5
   697                           preinc1	equ	0xFE4
   698                           plusw1	equ	0xFE3
   699                           fsr1h	equ	0xFE2
   700                           fsr1l	equ	0xFE1
   701                           bsr	equ	0xFE0
   702                           indf2	equ	0xFDF
   703                           postinc2	equ	0xFDE
   704                           postdec2	equ	0xFDD
   705                           preinc2	equ	0xFDC
   706                           plusw2	equ	0xFDB
   707                           fsr2h	equ	0xFDA
   708                           fsr2l	equ	0xFD9
   709                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     930
                            ___awdiv
                            ___awmod
                            _deco_cc
 ---------------------------------------------------------------------------------
 (1) _deco_cc                                              4     4      0      30
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _deco_cc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8       F       1       15.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       F      20        0.0%
DATA                 0      0       F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon May 18 20:47:42 2020

                      _i 000E                       l27 7FFE             ___awdiv@sign 0006  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l281 7F34  
                    l294 7E70                      l731 7F58                      l723 7F38  
                    l741 7F80                      l733 7F60                      l725 7F40  
                    l911 7DE0                      l903 7DC2                      l743 7F88  
                    l735 7F68                      l727 7F48                      l921 7E18  
                    l913 7DEE                      l905 7DC6                      l737 7F70  
                    l729 7F50                      l923 7E26                      l931 7E50  
                    l915 7DF6                      l907 7DD4                      l739 7F78  
                    l747 7F90                      l861 7E76                      l933 7E60  
                    l925 7E3C                      l917 7E08                      l909 7DDC  
                    l749 7FFA                      l941 7D64                      l871 7EA6  
                    l863 7E84                      l935 7E68                      l927 7E44  
                    l919 7E10                      l951 7D94                      l943 7D6A  
                    l881 7ED4                      l873 7EAA                      l865 7E8C  
                    l929 7E4A                      l961 7FA4                      l953 7DAA  
                    l945 7D70                      l891 7F08                      l883 7EE2  
                    l875 7EB2                      l867 7E90                      l859 7E72  
                    l955 7DB2                      l947 7D78                      l939 7D60  
                    l893 7F0E                      l885 7EE8                      l877 7EC4  
                    l869 7E9E                      l949 7D7E                      l887 7EFE  
                    l879 7ECC                      l895 7F14                      l897 7F24  
                    l889 7F06                      l899 7F2C             __CFG_CPB$OFF 000000  
                    u200 7DEE                      u201 7DEA                      u130 7E84  
                    u210 7E08                      u131 7E80                      u211 7E04  
                    u140 7E9E                      u220 7E26                      u141 7E9A  
                    u221 7E22                      u150 7EC4                      u230 7E3C  
                    u151 7EC0                      u231 7E38                      u160 7EE2  
                    u240 7E60                      u161 7EDE                      u241 7E5C  
                    u170 7EFE                      u171 7EFA                      u180 7F24  
                    u181 7F20                      u190 7DD4                      u191 7DD0  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000             ___awmod@sign 0006  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _main 7D60  
                   _num1 000D                     _num2 000C                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
        __end_of___awdiv 7F36          __end_of___awmod 7E72          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTD 000F83            __CFG_USBDIV$1 000000                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISD 000F95          __end_of_deco_cc 8000  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    status 000FD8  
         __CFG_ICPRT$OFF 000000          __initialization 7D52             __end_of_main 7DC2  
                 ??_main 0009            __activetblptr 000002         ___awdiv@dividend 0001  
         __CFG_XINST$OFF 000000                ??___awdiv 0005                   _decena 0009  
         __CFG_STVREN$ON 000000                ??___awmod 0005                ??_deco_cc 0001  
       ___awdiv@quotient 0007          ___awmod@divisor 0003                   _result 000B  
        ___awmod@counter 0005                   _unidad 000A            deco_cc@myDeco 0004  
          deco_cc@numero 0003                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7D56          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001               __pnvCOMRAM 0009          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 7E72  
                ___awmod 7DC2                  _deco_cc 7F36                  __pcinit 7D52  
                __ramtop 0800                  __ptext0 7D60                  __ptext1 7F36  
                __ptext2 7DC2                  __ptext3 7E72         ___awmod@dividend 0001  
   end_of_initialization 7D56            __Lmediumconst 0000      start_initialization 7D52  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 000E                 ?___awdiv 0001  
               ?___awmod 0001                 ?_deco_cc 0001         __CFG_WDTPS$32768 000000  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 00C4  
       __size_of___awmod 00B0         __size_of_deco_cc 00CA    __CFG_FOSC$INTOSCIO_EC 000000  
          __size_of_main 0062    __CFG_CPUDIV$OSC1_PLL2 000000  
