

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue May 12 21:02:53 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11  0000                     
    12                           ; Version 2.10
    13                           ; Generated 31/07/2019 GMT
    14                           ; 
    15                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4550 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     _PORTD	set	3971
    47  0000                     _PORTBbits	set	3969
    48  0000                     _PORTA	set	3968
    49  0000                     _TRISA	set	3986
    50  0000                     _TRISD	set	3989
    51  0000                     _TRISB	set	3987
    52                           
    53                           ; #config settings
    54  0000                     
    55                           	psect	cinit
    56  007EA8                     __pcinit:
    57                           	opt callstack 0
    58  007EA8                     start_initialization:
    59                           	opt callstack 0
    60  007EA8                     __initialization:
    61                           	opt callstack 0
    62                           
    63                           ; Clear objects allocated to COMRAM (2 bytes)
    64  007EA8  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    65  007EAA  6A01               	clrf	__pbssCOMRAM& (0+255),c
    66  007EAC                     end_of_initialization:
    67                           	opt callstack 0
    68  007EAC                     __end_of__initialization:
    69                           	opt callstack 0
    70  007EAC  0E00               	movlw	low (__Lmediumconst shr (0+16))
    71  007EAE  6EF8               	movwf	tblptru,c
    72  007EB0  0100               	movlb	0
    73  007EB2  EF5B  F03F         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	bssCOMRAM
    76  000001                     __pbssCOMRAM:
    77                           	opt callstack 0
    78  000001                     _num:
    79                           	opt callstack 0
    80  000001                     	ds	2
    81                           
    82                           	psect	cstackCOMRAM
    83  000003                     __pcstackCOMRAM:
    84                           	opt callstack 0
    85  000003                     ??_main:
    86                           
    87                           ; 1 bytes @ 0x0
    88  000003                     	ds	2
    89                           
    90 ;;
    91 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    92 ;;
    93 ;; *************** function _main *****************
    94 ;; Defined at:
    95 ;;		line 13 in file "main.c"
    96 ;; Parameters:    Size  Location     Type
    97 ;;		None
    98 ;; Auto vars:     Size  Location     Type
    99 ;;		None
   100 ;; Return value:  Size  Location     Type
   101 ;;                  1    wreg      void 
   102 ;; Registers used:
   103 ;;		wreg, status,2, status,0
   104 ;; Tracked objects:
   105 ;;		On entry : 0/0
   106 ;;		On exit  : 0/0
   107 ;;		Unchanged: 0/0
   108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   109 ;;      Params:         0       0       0       0       0       0       0       0       0
   110 ;;      Locals:         0       0       0       0       0       0       0       0       0
   111 ;;      Temps:          2       0       0       0       0       0       0       0       0
   112 ;;      Totals:         2       0       0       0       0       0       0       0       0
   113 ;;Total ram usage:        2 bytes
   114 ;; This function calls:
   115 ;;		Nothing
   116 ;; This function is called by:
   117 ;;		Startup code after reset
   118 ;; This function uses a non-reentrant model
   119 ;;
   120                           
   121                           	psect	text0
   122  007EB6                     __ptext0:
   123                           	opt callstack 0
   124  007EB6                     _main:
   125                           	opt callstack 31
   126  007EB6                     
   127                           ;main.c: 15:     TRISB=7;
   128  007EB6  0E07               	movlw	7
   129  007EB8  6E93               	movwf	147,c	;volatile
   130                           
   131                           ;main.c: 19:     TRISD = 0;
   132  007EBA  0E00               	movlw	0
   133  007EBC  6E95               	movwf	149,c	;volatile
   134                           
   135                           ;main.c: 20:     TRISA = 0;
   136  007EBE  0E00               	movlw	0
   137  007EC0  6E92               	movwf	146,c	;volatile
   138  007EC2  EF8B  F03F         	goto	l739
   139  007EC6                     l717:
   140  007EC6  0E3F               	movlw	63
   141  007EC8  6E80               	movwf	128,c	;volatile
   142  007ECA  EFC1  F03F         	goto	l741
   143  007ECE                     l719:
   144  007ECE  0E06               	movlw	6
   145  007ED0  6E80               	movwf	128,c	;volatile
   146  007ED2  EFC1  F03F         	goto	l741
   147  007ED6                     l721:
   148  007ED6  0E5B               	movlw	91
   149  007ED8  6E80               	movwf	128,c	;volatile
   150  007EDA  EFC1  F03F         	goto	l741
   151  007EDE                     l723:
   152  007EDE  0E4F               	movlw	79
   153  007EE0  6E80               	movwf	128,c	;volatile
   154  007EE2  EFC1  F03F         	goto	l741
   155  007EE6                     l725:
   156  007EE6  0E66               	movlw	102
   157  007EE8  6E80               	movwf	128,c	;volatile
   158  007EEA  EFC1  F03F         	goto	l741
   159  007EEE                     l727:
   160  007EEE  0E6D               	movlw	109
   161  007EF0  6E80               	movwf	128,c	;volatile
   162  007EF2  EFC1  F03F         	goto	l741
   163  007EF6                     l729:
   164  007EF6  0E7D               	movlw	125
   165  007EF8  6E80               	movwf	128,c	;volatile
   166  007EFA  EFC1  F03F         	goto	l741
   167  007EFE                     l731:
   168  007EFE  0E07               	movlw	7
   169  007F00  6E80               	movwf	128,c	;volatile
   170  007F02  EFC1  F03F         	goto	l741
   171  007F06                     l733:
   172  007F06  0E7F               	movlw	127
   173  007F08  6E80               	movwf	128,c	;volatile
   174  007F0A  EFC1  F03F         	goto	l741
   175  007F0E                     l735:
   176  007F0E  0E6F               	movlw	111
   177  007F10  6E80               	movwf	128,c	;volatile
   178  007F12  EFC1  F03F         	goto	l741
   179  007F16                     l739:
   180  007F16  C001  F003         	movff	_num,??_main
   181  007F1A  C002  F004         	movff	_num+1,??_main+1
   182                           
   183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   184                           ; Switch size 1, requested type "simple"
   185                           ; Number of cases is 1, Range of values is 0 to 0
   186                           ; switch strategies available:
   187                           ; Name         Instructions Cycles
   188                           ; simple_byte            4     3 (average)
   189                           ;	Chosen strategy is simple_byte
   190  007F1E  5004               	movf	(??_main+1)^0,w,c
   191  007F20  0A00               	xorlw	0	; case 0
   192  007F22  B4D8               	btfsc	status,2,c
   193  007F24  EF96  F03F         	goto	l767
   194  007F28  EFC1  F03F         	goto	l741
   195  007F2C                     l767:
   196                           
   197                           ; Switch size 1, requested type "simple"
   198                           ; Number of cases is 10, Range of values is 0 to 9
   199                           ; switch strategies available:
   200                           ; Name         Instructions Cycles
   201                           ; simple_byte           31    16 (average)
   202                           ;	Chosen strategy is simple_byte
   203  007F2C  5003               	movf	??_main^0,w,c
   204  007F2E  0A00               	xorlw	0	; case 0
   205  007F30  B4D8               	btfsc	status,2,c
   206  007F32  EF63  F03F         	goto	l717
   207  007F36  0A01               	xorlw	1	; case 1
   208  007F38  B4D8               	btfsc	status,2,c
   209  007F3A  EF67  F03F         	goto	l719
   210  007F3E  0A03               	xorlw	3	; case 2
   211  007F40  B4D8               	btfsc	status,2,c
   212  007F42  EF6B  F03F         	goto	l721
   213  007F46  0A01               	xorlw	1	; case 3
   214  007F48  B4D8               	btfsc	status,2,c
   215  007F4A  EF6F  F03F         	goto	l723
   216  007F4E  0A07               	xorlw	7	; case 4
   217  007F50  B4D8               	btfsc	status,2,c
   218  007F52  EF73  F03F         	goto	l725
   219  007F56  0A01               	xorlw	1	; case 5
   220  007F58  B4D8               	btfsc	status,2,c
   221  007F5A  EF77  F03F         	goto	l727
   222  007F5E  0A03               	xorlw	3	; case 6
   223  007F60  B4D8               	btfsc	status,2,c
   224  007F62  EF7B  F03F         	goto	l729
   225  007F66  0A01               	xorlw	1	; case 7
   226  007F68  B4D8               	btfsc	status,2,c
   227  007F6A  EF7F  F03F         	goto	l731
   228  007F6E  0A0F               	xorlw	15	; case 8
   229  007F70  B4D8               	btfsc	status,2,c
   230  007F72  EF83  F03F         	goto	l733
   231  007F76  0A01               	xorlw	1	; case 9
   232  007F78  B4D8               	btfsc	status,2,c
   233  007F7A  EF87  F03F         	goto	l735
   234  007F7E  EFC1  F03F         	goto	l741
   235  007F82                     l741:
   236                           
   237                           ;main.c: 38:         num=num+1;
   238  007F82  0E01               	movlw	1
   239  007F84  2401               	addwf	_num^0,w,c
   240  007F86  6E01               	movwf	_num^0,c
   241  007F88  0E00               	movlw	0
   242  007F8A  2002               	addwfc	(_num+1)^0,w,c
   243  007F8C  6E02               	movwf	(_num+1)^0,c
   244                           
   245                           ;main.c: 39:         if(num==10){
   246  007F8E  0E0A               	movlw	10
   247  007F90  1801               	xorwf	_num^0,w,c
   248  007F92  1002               	iorwf	(_num+1)^0,w,c
   249  007F94  A4D8               	btfss	status,2,c
   250  007F96  EFCF  F03F         	goto	u11
   251  007F9A  EFD1  F03F         	goto	u10
   252  007F9E                     u11:
   253  007F9E  EFD5  F03F         	goto	l745
   254  007FA2                     u10:
   255  007FA2                     
   256                           ;main.c: 40:             num=0;
   257  007FA2  0E00               	movlw	0
   258  007FA4  6E02               	movwf	(_num+1)^0,c
   259  007FA6  0E00               	movlw	0
   260  007FA8  6E01               	movwf	_num^0,c
   261  007FAA                     l745:
   262                           
   263                           ;main.c: 42:         if(PORTBbits.RB0==1){
   264  007FAA  A081               	btfss	129,0,c	;volatile
   265  007FAC  EFDA  F03F         	goto	u21
   266  007FB0  EFDC  F03F         	goto	u20
   267  007FB4                     u21:
   268  007FB4  EFDE  F03F         	goto	l749
   269  007FB8                     u20:
   270  007FB8                     
   271                           ;main.c: 43:             PORTD=0x0F;
   272  007FB8  0E0F               	movlw	15
   273  007FBA  6E83               	movwf	131,c	;volatile
   274  007FBC                     l749:
   275                           
   276                           ;main.c: 45:         if(PORTBbits.RB1==1){
   277  007FBC  A281               	btfss	129,1,c	;volatile
   278  007FBE  EFE3  F03F         	goto	u31
   279  007FC2  EFE5  F03F         	goto	u30
   280  007FC6                     u31:
   281  007FC6  EFE7  F03F         	goto	l753
   282  007FCA                     u30:
   283  007FCA                     
   284                           ;main.c: 46:              PORTD=0xF0;
   285  007FCA  0EF0               	movlw	240
   286  007FCC  6E83               	movwf	131,c	;volatile
   287  007FCE                     l753:
   288                           
   289                           ;main.c: 49:         if(PORTBbits.RB2==1){
   290  007FCE  A481               	btfss	129,2,c	;volatile
   291  007FD0  EFEC  F03F         	goto	u41
   292  007FD4  EFEE  F03F         	goto	u40
   293  007FD8                     u41:
   294  007FD8  EFF0  F03F         	goto	l757
   295  007FDC                     u40:
   296  007FDC                     
   297                           ;main.c: 50:              PORTD=0x3F;
   298  007FDC  0E3F               	movlw	63
   299  007FDE  6E83               	movwf	131,c	;volatile
   300  007FE0                     l757:
   301                           
   302                           ;main.c: 63:         _delay((unsigned long)((200)*(4000000L/4000.0)));
   303  007FE0  0E02               	movlw	2
   304  007FE2  6E04               	movwf	(??_main+1)^0,c
   305  007FE4  0E04               	movlw	4
   306  007FE6  6E03               	movwf	??_main^0,c
   307  007FE8  0EBA               	movlw	186
   308  007FEA                     u57:
   309  007FEA  2EE8               	decfsz	wreg,f,c
   310  007FEC  D7FE               	bra	u57
   311  007FEE  2E03               	decfsz	??_main^0,f,c
   312  007FF0  D7FC               	bra	u57
   313  007FF2  2E04               	decfsz	(??_main+1)^0,f,c
   314  007FF4  D7FA               	bra	u57
   315  007FF6  D000               	nop2	
   316                           
   317                           ;main.c: 65:     }
   318  007FF8  EF8B  F03F         	goto	l739
   319  007FFC  EF00  F000         	goto	start
   320  008000                     __end_of_main:
   321                           	opt callstack 0
   322  0000                     
   323                           	psect	rparam
   324  0000                     tosu	equ	0xFFF
   325                           tosh	equ	0xFFE
   326                           tosl	equ	0xFFD
   327                           stkptr	equ	0xFFC
   328                           pclatu	equ	0xFFB
   329                           pclath	equ	0xFFA
   330                           pcl	equ	0xFF9
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           prodh	equ	0xFF4
   336                           prodl	equ	0xFF3
   337                           indf0	equ	0xFEF
   338                           postinc0	equ	0xFEE
   339                           postdec0	equ	0xFED
   340                           preinc0	equ	0xFEC
   341                           plusw0	equ	0xFEB
   342                           fsr0h	equ	0xFEA
   343                           fsr0l	equ	0xFE9
   344                           wreg	equ	0xFE8
   345                           indf1	equ	0xFE7
   346                           postinc1	equ	0xFE6
   347                           postdec1	equ	0xFE5
   348                           preinc1	equ	0xFE4
   349                           plusw1	equ	0xFE3
   350                           fsr1h	equ	0xFE2
   351                           fsr1l	equ	0xFE1
   352                           bsr	equ	0xFE0
   353                           indf2	equ	0xFDF
   354                           postinc2	equ	0xFDE
   355                           postdec2	equ	0xFDD
   356                           preinc2	equ	0xFDC
   357                           plusw2	equ	0xFDB
   358                           fsr2h	equ	0xFDA
   359                           fsr2l	equ	0xFD9
   360                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       4       1        4.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4      20        0.0%
DATA                 0      0       4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue May 12 21:02:53 2020

                     u10 7FA2                       u11 7F9E                       u20 7FB8  
                     u21 7FB4                       u30 7FCA                       u31 7FC6  
                     u40 7FDC                       u41 7FD8                       u57 7FEA  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l721 7ED6  
                    l731 7EFE                      l723 7EDE                      l715 7EB6  
                    l733 7F06                      l725 7EE6                      l741 7F82  
                    l717 7EC6                      l751 7FCA                      l743 7FA2  
                    l735 7F0E                      l727 7EEE                      l719 7ECE  
                    l753 7FCE                      l745 7FAA                      l729 7EF6  
                    l755 7FDC                      l747 7FB8                      l739 7F16  
                    l757 7FE0                      l749 7FBC                      l767 7F2C  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000  
                    _num 0001                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _main 7EB6                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0003  
                  _PORTA 000F80                    _PORTD 000F83            __CFG_USBDIV$1 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    status 000FD8  
         __CFG_ICPRT$OFF 000000          __initialization 7EA8             __end_of_main 8000  
                 ??_main 0003            __activetblptr 000002           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7EAC          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0003          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7EA8                  __ramtop 0800  
                __ptext0 7EB6     end_of_initialization 7EAC            __Lmediumconst 0000  
              _PORTBbits 000F81      start_initialization 7EA8         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0001         __CFG_WDTPS$32768 000000                 __Hrparam 0000  
               __Lrparam 0000    __CFG_FOSC$INTOSCIO_EC 000000            __size_of_main 014A  
  __CFG_CPUDIV$OSC1_PLL2 000000  
